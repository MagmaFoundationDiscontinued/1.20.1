--- a/net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer.java
+++ b/net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer.java
@@ -54,17 +_,17 @@
          if (armoritem.m_40402_() == p_117122_) {
             this.m_117386_().m_102872_(p_117124_);
             this.m_117125_(p_117124_, p_117122_);
+            net.minecraft.client.model.Model model = getArmorModelHook(p_117121_, itemstack, p_117122_, p_117124_);
             boolean flag = this.m_117128_(p_117122_);
-            if (armoritem instanceof DyeableArmorItem) {
-               DyeableArmorItem dyeablearmoritem = (DyeableArmorItem)armoritem;
-               int i = dyeablearmoritem.m_41121_(itemstack);
+            if (armoritem instanceof net.minecraft.world.item.DyeableLeatherItem) {
+               int i = ((net.minecraft.world.item.DyeableLeatherItem)armoritem).m_41121_(itemstack);
                float f = (float)(i >> 16 & 255) / 255.0F;
                float f1 = (float)(i >> 8 & 255) / 255.0F;
                float f2 = (float)(i & 255) / 255.0F;
-               this.m_289609_(p_117119_, p_117120_, p_117123_, armoritem, p_117124_, flag, f, f1, f2, (String)null);
-               this.m_289609_(p_117119_, p_117120_, p_117123_, armoritem, p_117124_, flag, 1.0F, 1.0F, 1.0F, "overlay");
+               this.renderModel(p_117119_, p_117120_, p_117123_, armoritem, p_117124_, flag, f, f1, f2, this.getArmorResource(p_117121_, itemstack, p_117122_, null));
+               this.renderModel(p_117119_, p_117120_, p_117123_, armoritem, p_117124_, flag, 1.0F, 1.0F, 1.0F, this.getArmorResource(p_117121_, itemstack, p_117122_, "overlay"));
             } else {
-               this.m_289609_(p_117119_, p_117120_, p_117123_, armoritem, p_117124_, flag, 1.0F, 1.0F, 1.0F, (String)null);
+               this.renderModel(p_117119_, p_117120_, p_117123_, armoritem, p_117124_, flag, 1.0F, 1.0F, 1.0F, this.getArmorResource(p_117121_, itemstack, p_117122_, null));
             }
 
             ArmorTrim.m_266285_(p_117121_.m_9236_().m_9598_(), itemstack).ifPresent((p_289638_) -> {
@@ -103,7 +_,10 @@
    }
 
    private void m_289609_(PoseStack p_289664_, MultiBufferSource p_289689_, int p_289681_, ArmorItem p_289650_, A p_289658_, boolean p_289668_, float p_289678_, float p_289674_, float p_289693_, @Nullable String p_289682_) {
-      VertexConsumer vertexconsumer = p_289689_.m_6299_(RenderType.m_110431_(this.m_117080_(p_289650_, p_289668_, p_289682_)));
+       renderModel(p_289664_, p_289689_, p_289681_, p_289650_, p_289658_, p_289668_, p_289678_, p_289674_, p_289693_, this.m_117080_(p_289650_, p_289668_, p_289682_));
+   }
+   private void renderModel(PoseStack p_289664_, MultiBufferSource p_289689_, int p_289681_, ArmorItem p_289650_, A p_289658_, boolean p_289668_, float p_289678_, float p_289674_, float p_289693_, ResourceLocation armorResource) {
+      VertexConsumer vertexconsumer = net.minecraft.client.renderer.entity.ItemRenderer.m_115184_(p_289689_, RenderType.m_110431_(armorResource), false, p_289668_);
       p_289658_.m_7695_(p_289664_, vertexconsumer, p_289681_, OverlayTexture.f_118083_, p_289678_, p_289674_, p_289693_, 1.0F);
    }
 
@@ -125,8 +_,50 @@
       return p_117129_ == EquipmentSlot.LEGS;
    }
 
+   @Deprecated //Use the more sensitive version getArmorResource below
    private ResourceLocation m_117080_(ArmorItem p_117081_, boolean p_117082_, @Nullable String p_117083_) {
       String s = "textures/models/armor/" + p_117081_.m_40401_().m_6082_() + "_layer_" + (p_117082_ ? 2 : 1) + (p_117083_ == null ? "" : "_" + p_117083_) + ".png";
       return f_117070_.computeIfAbsent(s, ResourceLocation::new);
    }
+
+   /*=================================== FORGE START =========================================*/
+
+   /**
+    * Hook to allow item-sensitive armor model. for HumanoidArmorLayer.
+    */
+   protected net.minecraft.client.model.Model getArmorModelHook(T entity, ItemStack itemStack, EquipmentSlot slot, A model) {
+      return net.minecraftforge.client.ForgeHooksClient.getArmorModel(entity, itemStack, slot, model);
+   }
+
+   /**
+    * More generic ForgeHook version of the above function, it allows for Items to have more control over what texture they provide.
+    *
+    * @param entity Entity wearing the armor
+    * @param stack ItemStack for the armor
+    * @param slot Slot ID that the item is in
+    * @param type Subtype, can be null or "overlay"
+    * @return ResourceLocation pointing at the armor's texture
+    */
+   public ResourceLocation getArmorResource(net.minecraft.world.entity.Entity entity, ItemStack stack, EquipmentSlot slot, @Nullable String type) {
+      ArmorItem item = (ArmorItem)stack.m_41720_();
+      String texture = item.m_40401_().m_6082_();
+      String domain = "minecraft";
+      int idx = texture.indexOf(':');
+      if (idx != -1) {
+         domain = texture.substring(0, idx);
+         texture = texture.substring(idx + 1);
+      }
+      String s1 = String.format(java.util.Locale.ROOT, "%s:textures/models/armor/%s_layer_%d%s.png", domain, texture, (m_117128_(slot) ? 2 : 1), type == null ? "" : String.format(java.util.Locale.ROOT, "_%s", type));
+
+      s1 = net.minecraftforge.client.ForgeHooksClient.getArmorTexture(entity, stack, s1, slot, type);
+      ResourceLocation resourcelocation = f_117070_.get(s1);
+
+      if (resourcelocation == null) {
+         resourcelocation = new ResourceLocation(s1);
+         f_117070_.put(s1, resourcelocation);
+      }
+
+      return resourcelocation;
+   }
+   /*=================================== FORGE END ===========================================*/
 }
